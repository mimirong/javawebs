<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
			</list>
		</property>
	</bean>

	<!-- ComponentScan -->
	<context:component-scan base-package="cn.com.hugedata.spark">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Remoting Weaver Service -->
	<!--<bean id="weaverDeptService"-->
		  <!--class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">-->
		<!--<property name="serviceUrl">-->
			<!--<value>${weaver.serviceUrl}/dept.service</value>-->
		<!--</property>-->
		<!--<property name="serviceInterface">-->
			<!--<value>cn.com.hugedata.weaverconnect.service.WeaverDeptService</value>-->
		<!--</property>-->
	<!--</bean>-->

	<!--<bean id="weaverOrgService"-->
		  <!--class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">-->
		<!--<property name="serviceUrl">-->
			<!--<value>${weaver.serviceUrl}/org.service</value>-->
		<!--</property>-->
		<!--<property name="serviceInterface">-->
			<!--<value>cn.com.hugedata.weaverconnect.service.WeaverOrgService</value>-->
		<!--</property>-->
	<!--</bean>-->

	<!--<bean id="weaverUserService"-->
		  <!--class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">-->
		<!--<property name="serviceUrl">-->
			<!--<value>${weaver.serviceUrl}/user.service</value>-->
		<!--</property>-->
		<!--<property name="serviceInterface">-->
			<!--<value>cn.com.hugedata.weaverconnect.service.WeaverUserService</value>-->
		<!--</property>-->
	<!--</bean>-->

	<!-- SynchronizeWeaverDataJob -->
	<!--<bean id="synchronizeWeaverDataJobBean" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->
		<!--<property name="jobClass" value="cn.com.hugedata.spark.ums.job.SynchronizeWeaverDataJob" />-->
		<!--<property name="durability" value="true" />-->
	<!--</bean>-->

	<!--<bean id="synchronizeWeaverDataJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
		<!--<property name="jobDetail" ref="synchronizeWeaverDataJobBean" />-->
		<!--<property name="cronExpression">-->
			<!--<value>${weaver.synchronize.time}</value>-->
		<!--</property>-->
	<!--</bean>-->

	<!-- SchedulerFactory -->
	<!-- 
	<bean id="startQuartz" lazy-init="false" autowire="no"
		  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				 <ref bean="synchronizeWeaverDataJobCronTrigger" />
			</list>
		</property>
		<property name="autoStartup" value="true" />
		<property name="schedulerName" value="cronScheduler" />
	</bean>
	-->
	
</beans>