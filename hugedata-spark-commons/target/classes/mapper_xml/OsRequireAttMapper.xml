<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.hugedata.spark.commons.storage.mapper.OsRequireAttMapper" >
  <resultMap id="BaseResultMap" type="cn.com.hugedata.spark.commons.storage.entity.OsRequireAtt" >
    <id column="att_id" property="attId" jdbcType="INTEGER" />
    <result column="require_id" property="requireId" jdbcType="INTEGER" />
    <result column="file_id" property="fileId" jdbcType="VARCHAR" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Map_Where_Clause" >
    <if test="null != attId" >
      and ora.att_id = #{attId}
    </if>
    <if test="null != ne_attId" >
      and ora.att_id != #{ne_attId}
    </if>
    <if test="null != list_attId" >
      and ora.att_id in (<foreach collection="list_attId" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != requireId" >
      and ora.require_id = #{requireId}
    </if>
    <if test="null != ne_requireId" >
      and ora.require_id != #{ne_requireId}
    </if>
    <if test="null != list_requireId" >
      and ora.require_id in (<foreach collection="list_requireId" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != fileId" >
      and ora.file_id = #{fileId}
    </if>
    <if test="null != ne_fileId" >
      and ora.file_id != #{ne_fileId}
    </if>
    <if test="null != like_fileId" >
      and ora.file_id like CONCAT('%', #{like_fileId}, '%')
    </if>
    <if test="null != list_fileId" >
      and ora.file_id in (<foreach collection="list_fileId" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_fileId" >
      and ora.file_id &gt;= #{begin_fileId}
    </if>
    <if test="null != end_fileId" >
      and ora.file_id &lt;= #{end_fileId}
    </if>
    <if test="null != fileName" >
      and ora.file_name = #{fileName}
    </if>
    <if test="null != ne_fileName" >
      and ora.file_name != #{ne_fileName}
    </if>
    <if test="null != like_fileName" >
      and ora.file_name like CONCAT('%', #{like_fileName}, '%')
    </if>
    <if test="null != list_fileName" >
      and ora.file_name in (<foreach collection="list_fileName" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_fileName" >
      and ora.file_name &gt;= #{begin_fileName}
    </if>
    <if test="null != end_fileName" >
      and ora.file_name &lt;= #{end_fileName}
    </if>
    <if test="null != begin_createTime" >
      and ora.create_time &gt;= #{begin_createTime}
    </if>
    <if test="null != end_createTime" >
      and ora.create_time &lt;= #{end_createTime}
    </if>
  </sql>
  <sql id="Order_By_Clause" >
    <if test="null != order" >
      <trim prefix="order by " >
        <foreach collection="order" item="orderItem" separator="," >
          <if test="'attId' == orderItem.column" >
            ora.att_id ${orderItem.dir}
          </if>
          <if test="'requireId' == orderItem.column" >
            ora.require_id ${orderItem.dir}
          </if>
          <if test="'fileId' == orderItem.column" >
            ora.file_id ${orderItem.dir}
          </if>
          <if test="'fileName' == orderItem.column" >
            ora.file_name ${orderItem.dir}
          </if>
          <if test="'createTime' == orderItem.column" >
            ora.create_time ${orderItem.dir}
          </if>
        </foreach>
      </trim>
    </if>
  </sql>
  <sql id="Base_Column_List" >
    ora.att_id, ora.require_id, ora.file_id, ora.file_name, ora.create_time
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from os_require_att ora
    where ora.att_id = #{attId,jdbcType=INTEGER}
  </select>
  <select id="selectByMap" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from os_require_att ora
    <where >
      <include refid="Map_Where_Clause" />
    </where>
    <include refid="Order_By_Clause" />
  </select>
  <select id="countByMap" resultType="java.lang.Integer" parameterType="map" >
    select count(1)
    from os_require_att ora
    <where >
      <include refid="Map_Where_Clause" />
    </where>
  </select>
  <insert id="insertSelective" parameterType="cn.com.hugedata.spark.commons.storage.entity.OsRequireAtt" >
    <selectKey resultType="java.lang.Integer" keyProperty="attId" order="AFTER" >
      select @@identity
    </selectKey>
    insert into os_require_att
    <trim prefix="(" suffix=")" suffixOverrides="," >
      att_id,
      <if test="requireId != null" >
        require_id,
      </if>
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{attId,jdbcType=INTEGER},
      <if test="requireId != null" >
        #{requireId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from os_require_att
    where att_id = #{attId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByIds" >
    delete from os_require_att where att_id in 
    <foreach collection="list" item="id" open="(" separator="," close=")" >
      #{id}
    </foreach>
  </delete>
  <delete id="deleteByMap" >
    delete from ora using (os_require_att as ora) 
    <where >
      <include refid="Map_Where_Clause" />
    </where>
  </delete>
  <update id="updateSelectiveById" parameterType="cn.com.hugedata.spark.commons.storage.entity.OsRequireAtt" >
    update os_require_att
    <set >
      <if test="requireId != null" >
        require_id = #{requireId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null" >
        file_id = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where att_id = #{attId,jdbcType=INTEGER}
  </update>
  <update id="updateSelectiveByMap" parameterType="map" >
    update os_require_att ora
    <set >
      <if test="record.attId != null" >
        att_id = #{record.attId,jdbcType=INTEGER},
      </if>
      <if test="record.requireId != null" >
        require_id = #{record.requireId,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null" >
        file_id = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null" >
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <where >
      <if test="null != map.attId" >
        and ora.att_id = #{map.attId}
      </if>
      <if test="null != map.list_attId" >
        and ora.att_id in (<foreach collection="map.list_attId" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.requireId" >
        and ora.require_id = #{map.requireId}
      </if>
      <if test="null != map.list_requireId" >
        and ora.require_id in (<foreach collection="map.list_requireId" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.fileId" >
        and ora.file_id = #{map.fileId}
      </if>
      <if test="null != map.like_fileId" >
        and ora.file_id like '%' || #{map.like_fileId} || '%'
      </if>
      <if test="null != map.list_fileId" >
        and ora.file_id in (<foreach collection="map.list_fileId" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.fileName" >
        and ora.file_name = #{map.fileName}
      </if>
      <if test="null != map.like_fileName" >
        and ora.file_name like '%' || #{map.like_fileName} || '%'
      </if>
      <if test="null != map.list_fileName" >
        and ora.file_name in (<foreach collection="map.list_fileName" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.begin_createTime" >
        and ora.create_time &gt;= #{map.begin_createTime}
      </if>
      <if test="null != map.end_createTime" >
        and ora.create_time &lt;= #{map.end_createTime}
      </if>
    </where>
  </update>
</mapper>