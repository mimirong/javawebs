<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.hugedata.spark.commons.storage.mapper.SpProjectImageMapper" >
  <resultMap id="BaseResultMap" type="cn.com.hugedata.spark.commons.storage.entity.SpProjectImage" >
    <id column="IMAGE_ID" property="imageId" jdbcType="INTEGER" />
    <result column="PROJECT_ID" property="projectId" jdbcType="VARCHAR" />
    <result column="FILE_ID" property="fileId" jdbcType="VARCHAR" />
    <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
    <result column="PREVIEW_FILE_ID" property="previewFileId" jdbcType="VARCHAR" />
    <result column="PREVIEW_FILE_NAME" property="previewFileName" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="SORT_INDEX" property="sortIndex" jdbcType="DECIMAL" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Map_Where_Clause" >
    <if test="null != imageId" >
      and spi.IMAGE_ID = #{imageId}
    </if>
    <if test="null != ne_imageId" >
      and spi.IMAGE_ID != #{ne_imageId}
    </if>
    <if test="null != list_imageId" >
      and spi.IMAGE_ID in (<foreach collection="list_imageId" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != projectId" >
      and spi.PROJECT_ID = #{projectId}
    </if>
    <if test="null != ne_projectId" >
      and spi.PROJECT_ID != #{ne_projectId}
    </if>
    <if test="null != like_projectId" >
      and spi.PROJECT_ID like CONCAT('%', #{like_projectId}, '%')
    </if>
    <if test="null != list_projectId" >
      and spi.PROJECT_ID in (<foreach collection="list_projectId" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_projectId" >
      and spi.PROJECT_ID &gt;= #{begin_projectId}
    </if>
    <if test="null != end_projectId" >
      and spi.PROJECT_ID &lt;= #{end_projectId}
    </if>
    <if test="null != fileId" >
      and spi.FILE_ID = #{fileId}
    </if>
    <if test="null != ne_fileId" >
      and spi.FILE_ID != #{ne_fileId}
    </if>
    <if test="null != like_fileId" >
      and spi.FILE_ID like CONCAT('%', #{like_fileId}, '%')
    </if>
    <if test="null != list_fileId" >
      and spi.FILE_ID in (<foreach collection="list_fileId" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_fileId" >
      and spi.FILE_ID &gt;= #{begin_fileId}
    </if>
    <if test="null != end_fileId" >
      and spi.FILE_ID &lt;= #{end_fileId}
    </if>
    <if test="null != fileName" >
      and spi.FILE_NAME = #{fileName}
    </if>
    <if test="null != ne_fileName" >
      and spi.FILE_NAME != #{ne_fileName}
    </if>
    <if test="null != like_fileName" >
      and spi.FILE_NAME like CONCAT('%', #{like_fileName}, '%')
    </if>
    <if test="null != list_fileName" >
      and spi.FILE_NAME in (<foreach collection="list_fileName" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_fileName" >
      and spi.FILE_NAME &gt;= #{begin_fileName}
    </if>
    <if test="null != end_fileName" >
      and spi.FILE_NAME &lt;= #{end_fileName}
    </if>
    <if test="null != previewFileId" >
      and spi.PREVIEW_FILE_ID = #{previewFileId}
    </if>
    <if test="null != ne_previewFileId" >
      and spi.PREVIEW_FILE_ID != #{ne_previewFileId}
    </if>
    <if test="null != like_previewFileId" >
      and spi.PREVIEW_FILE_ID like CONCAT('%', #{like_previewFileId}, '%')
    </if>
    <if test="null != list_previewFileId" >
      and spi.PREVIEW_FILE_ID in (<foreach collection="list_previewFileId" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_previewFileId" >
      and spi.PREVIEW_FILE_ID &gt;= #{begin_previewFileId}
    </if>
    <if test="null != end_previewFileId" >
      and spi.PREVIEW_FILE_ID &lt;= #{end_previewFileId}
    </if>
    <if test="null != previewFileName" >
      and spi.PREVIEW_FILE_NAME = #{previewFileName}
    </if>
    <if test="null != ne_previewFileName" >
      and spi.PREVIEW_FILE_NAME != #{ne_previewFileName}
    </if>
    <if test="null != like_previewFileName" >
      and spi.PREVIEW_FILE_NAME like CONCAT('%', #{like_previewFileName}, '%')
    </if>
    <if test="null != list_previewFileName" >
      and spi.PREVIEW_FILE_NAME in (<foreach collection="list_previewFileName" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_previewFileName" >
      and spi.PREVIEW_FILE_NAME &gt;= #{begin_previewFileName}
    </if>
    <if test="null != end_previewFileName" >
      and spi.PREVIEW_FILE_NAME &lt;= #{end_previewFileName}
    </if>
    <if test="null != remark" >
      and spi.REMARK = #{remark}
    </if>
    <if test="null != ne_remark" >
      and spi.REMARK != #{ne_remark}
    </if>
    <if test="null != like_remark" >
      and spi.REMARK like CONCAT('%', #{like_remark}, '%')
    </if>
    <if test="null != list_remark" >
      and spi.REMARK in (<foreach collection="list_remark" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_remark" >
      and spi.REMARK &gt;= #{begin_remark}
    </if>
    <if test="null != end_remark" >
      and spi.REMARK &lt;= #{end_remark}
    </if>
    <if test="null != sortIndex" >
      and spi.SORT_INDEX = #{sortIndex}
    </if>
    <if test="null != ne_sortIndex" >
      and spi.SORT_INDEX != #{ne_sortIndex}
    </if>
    <if test="null != list_sortIndex" >
      and spi.SORT_INDEX in (<foreach collection="list_sortIndex" item="i" separator=",">#{i}</foreach>)
    </if>
    <if test="null != begin_createTime" >
      and spi.CREATE_TIME &gt;= #{begin_createTime}
    </if>
    <if test="null != end_createTime" >
      and spi.CREATE_TIME &lt;= #{end_createTime}
    </if>
  </sql>
  <sql id="Order_By_Clause" >
    <if test="null != order" >
      <trim prefix="order by " >
        <foreach collection="order" item="orderItem" separator="," >
          <if test="'imageId' == orderItem.column" >
            spi.IMAGE_ID ${orderItem.dir}
          </if>
          <if test="'projectId' == orderItem.column" >
            spi.PROJECT_ID ${orderItem.dir}
          </if>
          <if test="'fileId' == orderItem.column" >
            spi.FILE_ID ${orderItem.dir}
          </if>
          <if test="'fileName' == orderItem.column" >
            spi.FILE_NAME ${orderItem.dir}
          </if>
          <if test="'previewFileId' == orderItem.column" >
            spi.PREVIEW_FILE_ID ${orderItem.dir}
          </if>
          <if test="'previewFileName' == orderItem.column" >
            spi.PREVIEW_FILE_NAME ${orderItem.dir}
          </if>
          <if test="'remark' == orderItem.column" >
            spi.REMARK ${orderItem.dir}
          </if>
          <if test="'sortIndex' == orderItem.column" >
            spi.SORT_INDEX ${orderItem.dir}
          </if>
          <if test="'createTime' == orderItem.column" >
            spi.CREATE_TIME ${orderItem.dir}
          </if>
        </foreach>
      </trim>
    </if>
  </sql>
  <sql id="Base_Column_List" >
    spi.IMAGE_ID, spi.PROJECT_ID, spi.FILE_ID, spi.FILE_NAME, spi.PREVIEW_FILE_ID, spi.PREVIEW_FILE_NAME, 
    spi.REMARK, spi.SORT_INDEX, spi.CREATE_TIME
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sp_project_image spi
    where spi.IMAGE_ID = #{imageId,jdbcType=INTEGER}
  </select>
  <select id="selectByMap" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from sp_project_image spi
    <where >
      <include refid="Map_Where_Clause" />
    </where>
    <include refid="Order_By_Clause" />
  </select>
  <select id="countByMap" resultType="java.lang.Integer" parameterType="map" >
    select count(1)
    from sp_project_image spi
    <where >
      <include refid="Map_Where_Clause" />
    </where>
  </select>
  <insert id="insertSelective" parameterType="cn.com.hugedata.spark.commons.storage.entity.SpProjectImage" >
    <selectKey resultType="java.lang.Integer" keyProperty="imageId" order="AFTER" >
      select @@identity
    </selectKey>
    insert into sp_project_image
    <trim prefix="(" suffix=")" suffixOverrides="," >
      IMAGE_ID,
      <if test="projectId != null" >
        PROJECT_ID,
      </if>
      <if test="fileId != null" >
        FILE_ID,
      </if>
      <if test="fileName != null" >
        FILE_NAME,
      </if>
      <if test="previewFileId != null" >
        PREVIEW_FILE_ID,
      </if>
      <if test="previewFileName != null" >
        PREVIEW_FILE_NAME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="sortIndex != null" >
        SORT_INDEX,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{imageId,jdbcType=INTEGER},
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="previewFileId != null" >
        #{previewFileId,jdbcType=VARCHAR},
      </if>
      <if test="previewFileName != null" >
        #{previewFileName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sortIndex != null" >
        #{sortIndex,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from sp_project_image
    where IMAGE_ID = #{imageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByIds" >
    delete from sp_project_image where IMAGE_ID in 
    <foreach collection="list" item="id" open="(" separator="," close=")" >
      #{id}
    </foreach>
  </delete>
  <delete id="deleteByMap" >
    delete from spi using (sp_project_image as spi) 
    <where >
      <include refid="Map_Where_Clause" />
    </where>
  </delete>
  <update id="updateSelectiveById" parameterType="cn.com.hugedata.spark.commons.storage.entity.SpProjectImage" >
    update sp_project_image
    <set >
      <if test="projectId != null" >
        PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        FILE_ID = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="previewFileId != null" >
        PREVIEW_FILE_ID = #{previewFileId,jdbcType=VARCHAR},
      </if>
      <if test="previewFileName != null" >
        PREVIEW_FILE_NAME = #{previewFileName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sortIndex != null" >
        SORT_INDEX = #{sortIndex,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where IMAGE_ID = #{imageId,jdbcType=INTEGER}
  </update>
  <update id="updateSelectiveByMap" parameterType="map" >
    update sp_project_image spi
    <set >
      <if test="record.imageId != null" >
        IMAGE_ID = #{record.imageId,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null" >
        PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileId != null" >
        FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null" >
        FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.previewFileId != null" >
        PREVIEW_FILE_ID = #{record.previewFileId,jdbcType=VARCHAR},
      </if>
      <if test="record.previewFileName != null" >
        PREVIEW_FILE_NAME = #{record.previewFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sortIndex != null" >
        SORT_INDEX = #{record.sortIndex,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <where >
      <if test="null != map.imageId" >
        and spi.IMAGE_ID = #{map.imageId}
      </if>
      <if test="null != map.list_imageId" >
        and spi.IMAGE_ID in (<foreach collection="map.list_imageId" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.projectId" >
        and spi.PROJECT_ID = #{map.projectId}
      </if>
      <if test="null != map.like_projectId" >
        and spi.PROJECT_ID like '%' || #{map.like_projectId} || '%'
      </if>
      <if test="null != map.list_projectId" >
        and spi.PROJECT_ID in (<foreach collection="map.list_projectId" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.fileId" >
        and spi.FILE_ID = #{map.fileId}
      </if>
      <if test="null != map.like_fileId" >
        and spi.FILE_ID like '%' || #{map.like_fileId} || '%'
      </if>
      <if test="null != map.list_fileId" >
        and spi.FILE_ID in (<foreach collection="map.list_fileId" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.fileName" >
        and spi.FILE_NAME = #{map.fileName}
      </if>
      <if test="null != map.like_fileName" >
        and spi.FILE_NAME like '%' || #{map.like_fileName} || '%'
      </if>
      <if test="null != map.list_fileName" >
        and spi.FILE_NAME in (<foreach collection="map.list_fileName" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.previewFileId" >
        and spi.PREVIEW_FILE_ID = #{map.previewFileId}
      </if>
      <if test="null != map.like_previewFileId" >
        and spi.PREVIEW_FILE_ID like '%' || #{map.like_previewFileId} || '%'
      </if>
      <if test="null != map.list_previewFileId" >
        and spi.PREVIEW_FILE_ID in (<foreach collection="map.list_previewFileId" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.previewFileName" >
        and spi.PREVIEW_FILE_NAME = #{map.previewFileName}
      </if>
      <if test="null != map.like_previewFileName" >
        and spi.PREVIEW_FILE_NAME like '%' || #{map.like_previewFileName} || '%'
      </if>
      <if test="null != map.list_previewFileName" >
        and spi.PREVIEW_FILE_NAME in (<foreach collection="map.list_previewFileName" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.remark" >
        and spi.REMARK = #{map.remark}
      </if>
      <if test="null != map.like_remark" >
        and spi.REMARK like '%' || #{map.like_remark} || '%'
      </if>
      <if test="null != map.list_remark" >
        and spi.REMARK in (<foreach collection="map.list_remark" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.sortIndex" >
        and spi.SORT_INDEX = #{map.sortIndex}
      </if>
      <if test="null != map.list_sortIndex" >
        and spi.SORT_INDEX in (<foreach collection="map.list_sortIndex" item="i" separator=",">#{i}</foreach>)
      </if>
      <if test="null != map.begin_createTime" >
        and spi.CREATE_TIME &gt;= #{map.begin_createTime}
      </if>
      <if test="null != map.end_createTime" >
        and spi.CREATE_TIME &lt;= #{map.end_createTime}
      </if>
    </where>
  </update>
</mapper>